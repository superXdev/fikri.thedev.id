[
  {
    "title": "Download ebook Soldity gratis!",
    "description": "Dilengkapi dengan contoh praktis, best practice, dan konsep yang lebih advanced.",
    "dateFormatted": "October 28, 2024",
    "content": "![Daftar isi](/assets/images/posts/ebook.png)\n\nSetelah berbulan-bulan menyusun materi, akhirnya saya dapat membagikan ebook yang dirancang khusus untuk membantu teman-teman yang tertarik menjadi web3 developer atau solidity engineer. Ebook ini lebih dari sekadar tutorial; ini adalah panduan komprehensif dari dasar hingga tingkat lanjut, ditulis dengan gaya ringkas yang merangkum berbagai dokumentasi menjadi satu sumber yang mudah dipahami.\n\n**Apa yang Akan Kamu Pelajari di Ebook Ini?**\n\n1. **Dasar-Dasar Blockchain, Ethereum, & Solidity:**\n   Pelajari fondasi utama dari teknologi blockchain, pengenalan terhadap Ethereum, dan bagaimana Solidity digunakan untuk mengembangkan smart contract.\n\n2. **Konsep Dasar Pemrograman di Solidity:**\n   Buku ini membahas setup environment yang dibutuhkan, tipe data, fungsi, dan berbagai konsep dasar yang akan membantu kamu membangun pemahaman teknis yang solid.\n\n3. **Materi Lanjutan:**\n   Setelah menguasai dasar-dasar, kamu akan dibimbing untuk mendalami topik lanjut seperti event, error handling, debugging, dan keamanan dalam smart contract—hal-hal yang wajib dipahami seorang Solidity engineer.\n\n4. **Pola Desain (Design Patterns):**\n   Dalam pengembangan smart contract yang efisien, pola desain seperti ownership, factory, dan proxy sangat diperlukan. Ebook ini akan membantu kamu memahami cara menggunakan pola-pola ini dalam proyek kamu.\n\n5. **Bonus Repositori Kode Smart Contract:**\n   Sebagai tambahan, ebook ini juga menyertakan akses ke repositori kode smart contract sebagai referensi langsung yang bisa dipelajari dan diadaptasi ke dalam proyek kamu.\n\n**Unduh Ebook “Mastering Solidity” 100% Gratis!**\n\nEbook ini tersedia secara gratis untuk kamu yang serius ingin menjadi seorang Solidity engineer atau web3 developer. Jangan lewatkan kesempatan untuk memiliki ebook ini secara cuma-cuma! Kamu dapat mengunduhnya melalui tautan berikut: [Mastering Solidity Ebook](https://skydope.gumroad.com/l/mastering-solidity-ebook-ID).",
    "link": "/post/download-ebook-solidity-gratis"
  },
  {
    "title": "MaaS berbasis Blockchain",
    "description": "Cerita Pengalaman Kami Membawa Inovasi ke Indonesia",
    "dateFormatted": "January 12, 2025",
    "content": "Dalam tiga bulan terakhir, saya bersama tim Brave Teknologi mendapatkan tantangan besar untuk mengembangkan solusi MaaS (Mobility as a Service) berbasis blockchain. Proyek ini merupakan kolaborasi dengan salah satu universitas ternama di Prancis, yang memberikan kami teori dan dokumen teknis untuk diterjemahkan menjadi sistem yang berfungsi. Sebagai developer sekaligus pemimpin tim, saya bertugas memastikan semuanya berjalan sesuai rencana.\nNamun, proyek ini jauh dari kata mudah.\n\n## Awal yang Tidak Mudah\n\nJujur saja, ketika pertama kali mendengar istilah MaaS, kami bahkan belum memahami sepenuhnya apa itu, apalagi mengimplementasikannya menggunakan blockchain. Meski kami memiliki pengalaman di bidang blockchain, MaaS adalah sesuatu yang benar-benar baru bagi kami.\n\nKami menghadapi tantangan besar, terutama pada tahap awal. Pertama, kami harus memahami alur sistem MaaS secara keseluruhan, yang melibatkan integrasi berbagai layanan seperti transportasi umum, perhotelan, penerbangan, hingga sistem pembayaran. Kedua, kami harus mencari cara menghubungkan konsep tersebut ke dalam ekosistem blockchain Ethereum melalui smart contract.\n\n## Proses Pembelajaran dan Solusi\n\nKami memulai dengan melakukan riset mendalam, mempelajari konsep MaaS dari dasar, dan mencoba memahami bagaimana sistem ini diterapkan di negara-negara maju. Dengan pendekatan kolaboratif, kami berdiskusi intensif dengan klien untuk menggali lebih dalam kebutuhan mereka dan memastikan kami berada di jalur yang tepat. Proses integrasi dengan blockchain menjadi tantangan tersendiri.\nKami harus memastikan bahwa semua transaksi dan data di dalam sistem MaaS tercatat secara transparan dan aman di Ethereum, tanpa mengurangi efisiensi sistem.\n\nWalaupun awalnya terasa sulit, berkat kerja keras tim dan komitmen untuk terus belajar, kami akhirnya berhasil menyelesaikan proyek ini sesuai dengan perjanjian di awal.\n\n## Potensi MaaS di Indonesia\n\nMelalui pengalaman ini, saya melihat bahwa MaaS memiliki potensi besar untuk diterapkan di Indonesia. Dengan mengintegrasikan berbagai layanan mobilitas dalam satu platform, MaaS dapat mempermudah pengguna dan penyedia layanan, sekaligus membantu pemerintah memonitor dan mengelola sistem transportasi secara lebih efektif.\n\n## Pelajaran yang Kami Petik\n\nProyek ini menjadi salah satu cerita penting dalam perjalanan kami sebagai tim. Kami belajar bahwa menghadapi hal baru, meskipun sulit, adalah kesempatan untuk berkembang. Kami berharap pengalaman ini bisa menjadi inspirasi, baik bagi rekan-rekan pengembang, komunitas teknologi, maupun pemerintah Indonesia, untuk berinovasi dan menciptakan solusi yang bermanfaat bagi masyarakat.\n\nMenurut kamu, apakah MaaS bisa menjadi jawaban atas tantangan transportasi di Indonesia?",
    "link": "/post/maas-berbasis-blockchain"
  },
  {
    "title": "Perbedaan programmer, developer dan software engineer",
    "description": "Berikut perbedaan programmer, developer dan software engineer.",
    "dateFormatted": "October 24, 2023",
    "content": "**Programmer**\n\nSeorang *programmer* adalah seseorang yang memiliki keterampilan dalam menulis kode komputer. Mereka biasanya bertanggung jawab untuk mengubah ide dan spesifikasi menjadi kode yang dapat dieksekusi oleh komputer. Biasanya, programmer fokus pada tugas-tugas berikut:\n\n- Menulis kode sumber untuk menjalankan fungsi atau tugas tertentu.\n- Memahami dan menerapkan algoritma.\n- Mengatasi masalah teknis dalam kode.\n- Memahami bahasa pemrograman dan berbagai kerangka kerja.\n\n**Developer**\n\nSeorang *developer* (pengembang) adalah istilah yang lebih umum dan sering digunakan secara bergantian dengan *programmer*. Meskipun ada tumpang tindih dalam peran, pengembang cenderung memiliki cakupan pekerjaan yang lebih luas daripada programmer. Ini meliputi:\n\n- Merancang, mengembangkan, dan menguji perangkat lunak.\n- Memahami persyaratan proyek dan berkomunikasi dengan pemangku kepentingan.\n- Memelihara perangkat lunak, mengatasi bug, dan melakukan pembaruan.\n- Mungkin terlibat dalam pengembangan front-end (antarmuka pengguna) atau back-end (server dan basis data).\n\n**Software Engineer**\n\nSeorang *software engineer* (insinyur perangkat lunak) adalah seseorang yang memiliki pengetahuan teknis yang lebih mendalam dalam rekayasa perangkat lunak. Mereka biasanya memiliki pendidikan formal dalam ilmu komputer atau disiplin terkait. Peran seorang insinyur perangkat lunak mencakup:\n\n- Merancang sistem perangkat lunak yang kompleks dan scalable.\n- Menerapkan prinsip-prinsip rekayasa perangkat lunak seperti desain berorientasi objek, pola desain, dan pengujian yang ketat.\n- Memahami aspek keamanan perangkat lunak dan mengidentifikasi potensi kerentanannya.\n- Berpartisipasi dalam proses pengembangan perangkat lunak dari awal hingga akhir.\n\nJadi, meskipun ada tumpang tindih dalam peran-peran ini, *programmer* biasanya lebih berfokus pada menulis kode, *developer* lebih cenderung pada pengembangan dan pemeliharaan perangkat lunak, dan *software engineer* memiliki pemahaman mendalam tentang rekayasa perangkat lunak.",
    "link": "/post/perbedaan-programmer-developer"
  },
  {
    "title": "Bun - All in one JavaScript runtime",
    "description": "Bun is a JavaScript runtime that is designed to be a drop-in replacement for Node.js.",
    "dateFormatted": "October 24, 2023",
    "content": "![Bun](/assets/images/posts/bun.avif)\n\n**Bun** is a JavaScript runtime that is designed to be a drop-in replacement for Node.js. It is written in Zig and powered by JavaScript Core, which is the JavaScript engine used by Apple's Safari web browser.\n\nBun claims to be faster than Node.js, and it also has a smaller memory footprint. It also has a built-in bundler, test runner, and package manager, which makes it a more complete development toolkit than Node.js.\n\nHere are some of the key features of Bun:\n\n- **Fast**: Bun is designed to be fast and efficient. It uses a variety of techniques to improve performance, such as:\n  - Using a lightweight runtime\n  - Compiling JavaScript to native code\n  - Using a minimal set of APIs\n\n- **Lightweight**: Bun has a small memory footprint. This makes it ideal for running on devices with limited resources, such as IoT devices and mobile phones.\n\n- **Complete toolkit**: Bun includes a built-in bundler, test runner, and package manager. This makes it a complete development toolkit for JavaScript applications.\n\n- **Extensible**: Bun is extensible. You can write your own plugins and extensions to add new features or improve performance.\n\nHere are some of the use cases of Bun:\n\n- Building web applications\n- Building serverless applications\n- Running microservices\n- Developing IoT applications\n- Developing mobile applications\n\n**Installing Bun**:\n- It is supported for macOS, Linux, and WSL.\n- Bun provides a limited, experimental native build for Windows. At the moment, only the Bun runtime is supported.",
    "link": "/post/what-bun"
  }
]